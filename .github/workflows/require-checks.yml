name: Require Checks Before Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
  check-status:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Check required statuses
        id: status-check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const requiredChecks = ['test-build', 'security-scan', 'lint'];

            // Get the PR SHA
            const prSha = context.payload.pull_request.head.sha;

            // Get check runs
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: prSha
            });

            // Get combined statuses
            const { data: statuses } = await github.rest.repos.getCombinedStatusForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: prSha
            });

            // Verify all required checks passed
            const allChecksPassed = requiredChecks.every(check => {
              const checkRun = checks.check_runs.find(cr => cr.name === check);
              const status = statuses.statuses.find(s => s.context === check);
              return (checkRun && checkRun.conclusion === 'success') || 
                     (status && status.state === 'success');
            });

            core.setOutput('result', allChecksPassed ? 'true' : 'false');

      - name: Add ready-to-merge label
        if: steps.status-check.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['ready-to-merge']
            });

      - name: Remove ready-to-merge label if checks fail
        if: steps.status-check.outputs.result == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'ready-to-merge'
              });
            } catch (error) {
              console.log('Label not present, skipping');
            }
