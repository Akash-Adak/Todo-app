name: Require Checks Before Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  check_suite:
    types: [completed]

jobs:
  check-status:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Check required statuses
      id: status-check
      uses: actions/github-script@v7
      with:
        script: |
          const { data: checks } = await github.rest.checks.listForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha
          });
          
          const { data: statuses } = await github.rest.repos.getCombinedStatusForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha
          });
          
          const requiredChecks = [
            'test-build',
            'security-scan',
            'lint'
          ];
          
          const allChecksPassed = requiredChecks.every(check => {
            const checkRun = checks.check_runs.find(cr => cr.name === check);
            const status = statuses.statuses.find(s => s.context === check);
            
            return (checkRun && checkRun.conclusion === 'success') || 
                   (status && status.state === 'success');
          });
          
          console.log('All checks passed:', allChecksPassed);
          return allChecksPassed;
        result-encoding: string

    - name: Add ready-to-merge label
      if: steps.status-check.outputs.result == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: ['ready-to-merge']
          });

    - name: Remove ready-to-merge label if checks fail
      if: steps.status-check.outputs.result == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: 'ready-to-merge'
            });
          } catch (error) {
            // Label might not exist, which is fine
            console.log('Label not present');
          }